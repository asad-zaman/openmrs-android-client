buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:2.2.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}
plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '2.2.1'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'

    // TODO AC-861
    //id 'jacoco-android'
//    id 'com.hiya.jacoco-android'
}
apply from: './versions.gradle'
apply from: './resdir.gradle'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def version = versions.appVersion
def GOOGLE_PLACE_API_KEY = System.getenv('GOOGLE_PLACE_API_KEY') ?: "YOUR_API_KEY"

android {
    namespace 'org.intelehealth.app.mpower'
    compileSdkVersion versions.compileSdk

    dataBinding {
        enabled = true
    }

    def travisBuildNumber = System.getenv("TRAVIS_BUILD_NUMBER")
    def buildNumber = (travisBuildNumber) ? (travisBuildNumber as int) : 1

    def applicationVersion = version
    def travisTag = System.getenv("TRAVIS_TAG")
    def buildVersionName = (travisTag) ? travisTag : applicationVersion + "-debug." + buildNumber

    defaultConfig {
        applicationId "org.intelehealth.app.mpower"
        versionName buildVersionName
        versionCode buildNumber
        multiDexEnabled true

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        testApplicationId "org.intelehealth.app.mpower.test"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        manifestPlaceholders = [
                GOOGLE_PLACE_API_KEY: GOOGLE_PLACE_API_KEY
        ]
    }

    configurations.configureEach {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    signingConfigs {
        release {
            storeFile rootProject.file('release.keystore')
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS_NAME")
            keyPassword System.getenv("KEYSTORE_ALIAS_PASS")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        warning 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    buildFeatures {
        viewBinding = true
    }
}

repositories {
    maven { url 'https://yanzm.github.io/MaterialTabHost/repository' }
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    google()
}

dependencies {

    // Android sdk library dependency
    implementation project(path: ':openmrs-android-sdk')
    implementation project(':klivekit')
    implementation project(':fcm')

    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.legacy:legacy-support-v13:${versions.supportVersion}"
    implementation "androidx.gridlayout:gridlayout:${versions.supportVersion}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerView}"
    implementation "androidx.cardview:cardview:${versions.supportVersion}"

    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10"
    implementation "androidx.fragment:fragment-ktx:1.8.3"
    implementation "androidx.activity:activity-ktx:1.9.2"

    // Networking and Processing
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofitConverter}"
    implementation "com.google.code.gson:gson:${versions.gson}"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:2.8.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.8.1"

    // Rx Java dependency
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "com.jakewharton.rxbinding:rxbinding:${versions.rxbinding}"

    // Database components
    implementation "androidx.room:room-runtime:${versions.roomRuntime}"
    implementation "android.arch.persistence.room:rxjava2:${versions.roomPersistence}"

    // Noinspection GradleDependency
    kapt "androidx.room:room-compiler:${versions.roomCompiler}"

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:${versions.workManager}"

    // http request Chucker Library
    testImplementation "com.github.chuckerteam.chucker:library:${versions.chuckerLibrary}"
    debugImplementation "com.github.chuckerteam.chucker:library:${versions.chuckerLibrary}"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:${versions.chuckerLibrary}"

    // Third Party UI Libraries
//    implementation "org.adw.library:discrete-seekbar:${versions.seekbar}"
    implementation "com.github.PhilJay:MPAndroidChart:${versions.MPAndroidChart}"
    implementation "com.github.amlcurran.showcaseview:library:${versions.showcaseview}"
    implementation "org.mindrot:jbcrypt:${versions.jbcrypt}"
//    implementation "com.hbb20:ccp:${versions.countryCodePicker}"
    implementation "com.github.AppIntro:AppIntro:${versions.AppIntro}"
    implementation 'com.github.yalantis:ucrop:2.2.5'
    implementation "com.github.permissions-dispatcher:permissionsdispatcher-ktx:${versions.permissionsdispatcher}"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "joda-time:joda-time:${versions.jodaTime}"
    implementation "net.sf.kxml:kxml2:${versions.kxml2}"
    implementation "commons-codec:commons-codec:${versions.codec}"
    implementation "org.jdeferred:jdeferred-android-aar:${versions.jdeferred}"
    implementation "com.google.guava:guava:${versions.guava}"

    // Google place api
//    implementation "com.google.android.libraries.places:places:${versions.placesAPI}"

    // Hilt Dependency Injection
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-compiler:${versions.hilt}"
    implementation("androidx.hilt:hilt-work:1.2.0")
    kapt("androidx.hilt:hilt-compiler:1.2.0") /* Use it for Kotlin Workers */

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.6")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.8.6")
    implementation 'com.jakewharton.timber:timber:5.0.1'
    // Test Implementations
    androidTestImplementation(
            'androidx.test.ext:junit:1.2.1',
            'androidx.test.espresso:espresso-core:3.6.1',
            'androidx.test:rules:1.1.0-alpha4',
            'androidx.test:runner:1.1.0-alpha4',
            'org.mockito:mockito-core:2.8.9',
            'com.google.dexmaker:dexmaker-mockito:1.2',
            'com.google.dexmaker:dexmaker:1.2',
            'com.jayway.android.robotium:robotium-solo:4.2',
            'androidx.arch.core:core-testing:2.0.0'
    )
    testImplementation(
            'org.mockito:mockito-core:2.8.9',
            'org.mockito:mockito-inline:2.13.0',
            "org.mockito.kotlin:mockito-kotlin:4.0.0",
            'junit:junit:4.13.2',
            "org.junit.jupiter:junit-jupiter:5.8.2",
            'org.powermock:powermock-api-mockito2:2.0.2',
            'org.powermock:powermock-module-junit4:2.0.2',
            "com.google.dagger:hilt-android-testing:${versions.hilt}",
            "androidx.arch.core:core-testing:${versions.arch_version}"
    )
    testImplementation "android.arch.core:core-testing:${versions.coreTesting}"
    kaptTest "com.google.dagger:hilt-compiler:${versions.hilt}"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    // Debug database
//    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
}

apply plugin: 'com.google.gms.google-services'

kapt {
    correctErrorTypes true
}

play {
    enabled = rootProject.file('google_play.json').exists()

    if (version.contains("alpha")) {
        track = 'alpha'
    } else if (version.contains("beta")) {
        track = 'beta'
    } else {
        track = 'production'
    }

    serviceAccountCredentials = rootProject.file('google_play.json')
    resolutionStrategy = "auto"
    releaseStatus = "completed"

    outputProcessor { // this: ApkVariantOutput
        versionNameOverride = "$versionNameOverride.$versionCode"
    }
}
